



=== Stack =======================================================================================




compute-shader:
	dx dy in compute shader: https://wickedengine.net/2022/05/08/derivatives-in-compute-shader/
	I might not materialize the normal texture for terrain

surface could use tessalation shaders:
		https://www.youtube.com/watch?v=21gfE-zUym8


Topology / biome controlled random generation
	https://www.youtube.com/watch?v=rBY2Dzej03A

Delaunay triangulation
	Could solve biome generation (smooth/blended voronoi)

Vegetation
	When glsl generation is online, use compute shader to place vegetation (and handle instancing)
	GDC - Between Tech and Art: The Vegetation of Horizon Zero Dawn - https://www.youtube.com/watch?v=wavnKZNSYqU

	Grass
		SimonDev: summary of 'Ghost of Tsushima' - https://www.youtube.com/watch?v=bp7REZBV4P4

		https://www.youtube.com/watch?v=Y0Ko0kvwfgA
		https://www.youtube.com/watch?v=jw00MbIJcrk
		https://www.youtube.com/watch?v=PNvlqsXdQic

		Procedural Grass in 'Ghost of Tsushima' - https://www.youtube.com/watch?v=Ibe1JBF5i5Y

lod: (Geomipmapping) https://www.youtube.com/watch?v=08dApu_vS4c



kill sprite index VBO, reuse and share one index VBO (libv.glr mesh support to adopt VAO as index)

remember last config
priority sorting

seed a non-seeded noise : random x y offset and rotation with a single mat3 multiple operation

sprite not smooth but discrete angle following
\ sprite looks at eye, it should be just parallel with camera right, this would fix issues with orbit z hard clipping into each other and covering the other partially


startup crash, source unknown
		T 13 surface: TimerChunkGen    2 -4:   5.1110 ms, app/surface/surface/surface.cpp:36
		T 13 surface: TimerChunkGen    3 -4:   4.5917 ms, app/surface/surface/surface.cpp:36
		T 13 surface: TimerChunkGen    4 -4:   4.5092 ms, app/surface/surface/surface.cpp:36
		T 2 libv.rev: Main loop resource update took: 21.859ms for 1 resource, src/libv/rev/resource/resource_manager_internal.hxx:60
		I 2 libv.rev: Loading rev_sandbox/full_screen.vs|builtin/sprite_baker_downsample.fs v0, src/libv/rev/resource/shader_loader.cpp:132
		T 2 libv.rev: Tracking file shader/rev_sandbox/full_screen.vs for rev_sandbox/full_screen.vs|builtin/sprite_baker_downsample.fs because of include rev_sandbox/full_screen.vs, src/libv/rev/resource/shader_loader.cpp:62
		T 2 libv.rev: Tracking file ../../res/shader/rev_sandbox/full_screen.vs for rev_sandbox/full_screen.vs|builtin/sprite_baker_downsample.fs because of include rev_sandbox/full_screen.vs, src/libv/rev/resource/shader_loader.cpp:62
		T 2 libv.rev: Tracking file shader/builtin/sprite_baker_downsample.fs for rev_sandbox/full_screen.vs|builtin/sprite_baker_downsample.fs because of include builtin/sprite_baker_downsample.fs, src/libv/rev/resource/shader_loader.cpp:62
		T 2 libv.rev: Tracking file ../../res/shader/builtin/sprite_baker_downsample.fs for rev_sandbox/full_screen.vs|builtin/sprite_baker_downsample.fs because of include builtin/sprite_baker_downsample.fs, src/libv/rev/resource/shader_loader.cpp:62
		I 2 libv.rev: Updating rev_sandbox/full_screen.vs|builtin/sprite_baker_downsample.fs v0, src/libv/rev/resource/shader_loader.cpp:233
		T 2 libv.rev: Create new model: fighter_01_eltanin.0006_med.fixed.game.vm4 (MOV:100), src/libv/rev/resource/model_loader_internal.cpp:132
		T 2 libv.rev: Main loop resource update took: 2.733ms for 1 resource, src/libv/rev/resource/resource_manager_internal.hxx:60
		T 2 libv.rev: Create new model: projectile_missile_01_hellfire.0005_med.game.vm4 (MOV:100), src/libv/rev/resource/model_loader_internal.cpp:132
		T 2 libv.rev: Main loop resource update took: 1.449ms for 1 resource, src/libv/rev/resource/resource_manager_internal.hxx:60
		T 2 libv.rev: Create new model: tank_01_rocket_ring.0031_med.game.vm4 (MOV:100), src/libv/rev/resource/model_loader_internal.cpp:132
		T 2 libv.rev: Main loop resource update took: 8.984ms for 1 resource, src/libv/rev/resource/resource_manager_internal.hxx:60
		T 2 libv.rev: Create new model: building_delnan_16P_tex.0038_med.game.vm4 (MOV:100), src/libv/rev/resource/model_loader_internal.cpp:132
		T 2 libv.rev: Main loop resource update took: 5.087ms for 1 resource, src/libv/rev/resource/resource_manager_internal.hxx:60
		Process finished with exit code -1073740791 (0xC0000409)


Sprites:
	sprite bottom side make it darker
	sprite ambient lighting should not affect normals that point downward
	sprite normals should be faked to be more on a sphere

	cleanup shaders, there is a lot of space conversioness in vs->gs

	gs: UB on atan2 if x == 0

	sprite.fs
		dither: sprite random + sprite pos based viewport position, so, combine this two

	Sprite
		Render:
			dither blend between images
				no linear blend, but switch pixels one-by-one based on white noise
				! IF alpha not zero in any of them matches, then linear blend
				maybe exclusive angle threshold in the middle
					60% direct
					20-20% blend with neighbour
						1 fetch
						2 fetch (row or column change)
						4 fetch (row and column change)

		BAKE:
			on the sprite atlas edge, there is a smudge
				? drop one half pixel from the UV

Visuals:
	micro texture
		per biome based texture
			2 float
				texture index
				scale (repetition size)

	issues
		normal map corner pixel calculation (edge is now solved, but corner is not)
		texture view duplicate border pixels
		texture view sometimes can flicker a row on chunk borders
			most likely half pixel issue

	debug views
		normal, height
		textures on 3D: temperature, humidity etc

point/height xyz -> z (only) (witch to textures will solve it anyways)

libv.glr: mesh submesh update (for surface chunks)

Big things left
	Water
	LOD
	GLSL


=== Queue ========================================================================================


LOD
priority based generation order and rendering

config
	remember last: profile file, json (libv::serial)

Additional nodes:
	curve/envelop,
	"ease" functions,
	tangens,
	remap,
	height (available only in non-height maps)
	normal (available only in non-normal maps)

surface:
	collusion queries: camera, terrain picking, collusion detection

	improve lua config
		template iterate table
		error handling

	proper biome blending

	render:
		shadows
		cascading shadows
		instance rendering
		vegetation textures
		micro textures (per biome)

	chunks:
		edge patch or skirt




=== OUT OF SCOPE ===================================================================================

picture in picture:
	simultaneous visualization of 2D and 3D views,
	both with possible intermediate result/value vis.

popping effect avoidance on lod changes: geomorphing (x, y, z1, z2)

erosion: 10k-100k "rain drop", goes toward local minima, drop goes down = height--, drop lands or slows down height++
	nem lehet fuggetlen chunkokat generalni
	nem lehet vegtelen surafcet generalni
	nem lehet 1 pixelt samplelelni
	egeszet memoriaban kell tarolni
	iterativ
	alternativa: lehet kozeliteni sima negyztremelessel ha jol van osszeblendelve egy surface tulajdonsaggal

lakes
	bool floodFillTest(x, y, surface) -> true = place lake, false abort

 to, folyo, nagy hegy <- felskiccelt - maszk -> generalas
 vizszint megadasa (0- vizszint + 5)
 folyo shader <- designer rakta le a folyot



--- Art collection ---------------------------------------------------------------------------------

Sand Dunes: https://www.artstation.com/artwork/9NOvbo



--- ChatGPT prompts for surface --------------------------------------------------------------------

let us define PLANET as a hypothetical planet where beside earth like biomes there are many more scifi biomes like lava lake or crystal river

let us define PROPS as properties of a name, temperature, precipitation and colors of a biome.
temperature in PROPS must be represented as a min and max float value in celsius.
precipitation in PROPS must be represented as a min and max float value.
colors in PROPS must be a list of 4 hex colors that describes the given biome the best.

json list of 5 PROPS

---

PLANET := a hypothetical planet where beside earth like biomes there are more hypothetical scifi themed biomes like lava lake or crystal river
PLANET has no underground biome

PROPS := properties of a biome:
PROPS.name must be the name of the biome
PROPS.temperature must be represented as a min and max float value in celsius.
PROPS.precipitation must be represented as a min and max float value.
PROPS.colors must be a list of 4 hex colors that describes the given biome the best.

json list the PROPS of 5 biomes on PLANET

===
